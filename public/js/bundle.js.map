{"mappings":"AAAA,6BAA6B;AAE7B,yDAAyD;ACFlD,MAAM,4CAAc;IACzB,WAAW,SAAS,aAAa,CAAC;IAClC,YAAY,SAAS,aAAa,CAAC;IACnC,MAAM,SAAS,aAAa,CAAC;IAC7B,OAAO,SAAS,aAAa,CAAC;IAC9B,UAAU,SAAS,aAAa,CAAC;IACjC,iBAAiB,SAAS,aAAa,CAAC;IACxC,gBAAgB,MAAM,IAAI,CAAC,SAAS,gBAAgB,CAAC;AACvD;AAEA,cAAc;AACd,MAAM,6CAAuB,CAAC,KAAK,EAAE,EAAE,MAAM,EAAE,GAAK;IAClD,yCAAyC;IACzC,IAAI,MAAM,GAAG,aAAa,CAAC,aAAa,CAAC,sBACvC,GAAG,aAAa,CACb,aAAa,CAAC,qBACd,aAAa,CAAC,WAAW,CACxB,GAAG,aAAa,CAAC,aAAa,CAAC;IAIrC,uFAAuF;IACvF,IAAI,QAAQ,IAAI;IAEhB,MAAM,SAAS,CAAC;0FACwE,EAAE,IAAI;IAC5F,CAAC;IACH,GAAG,kBAAkB,CAAC,YAAY;AACpC;AAGO,MAAM,4CAAiB,IAAM;IAClC,IAAK,IAAI,IAAI,GAAG,IAAI,0CAAY,cAAc,CAAC,MAAM,EAAE,IACrD,IAAI,0CAAY,cAAc,CAAC,EAAE,CAAC,KAAK,CAAC,MAAM,GAAG,GAAG;QAClD,2CACE,0CAAY,cAAc,CAAC,EAAE,EAC7B;QAEF,OAAO,KAAK;IACd,CAAC;IAGH,IAAI,0CAAY,QAAQ,EACtB;QAAA,IAAI,0CAAY,QAAQ,CAAC,MAAM,GAAG,GAAG;YACnC,MAAM;YACN,OAAO,KAAK;QACd,CAAC;IAAD,CACD;IAED,IAAI,0CAAY,eAAe,EAC7B;QAAA,IAAI,0CAAY,eAAe,CAAC,MAAM,GAAG,GAAG;YAC1C,MAAM;YACN,OAAO,KAAK;QACd,CAAC;IAAD,CACD;IAED,IAAI,0CAAY,QAAQ,IAAI,0CAAY,eAAe,EACrD;QAAA,IAAI,0CAAY,QAAQ,CAAC,KAAK,IAAI,0CAAY,eAAe,CAAC,KAAK,EAAE;YACnE,MAAM,CAAC,2CAA2C,CAAC;YACnD,OAAO,KAAK;QACd,CAAC;IAAD,CACD;IAED,OAAO,IAAI;AACb;;AD5DA;AEJA,yCAAyC,GACzC,AAAO,MAAM,4CAAQ,OAAO,OAAO,UAAU,KAAK,EAAE,GAAK;IACvD,QAAQ,MAAM,IAAI;IAClB,WAAW,SAAS,IAAI;IAExB,MAAM,OAAO;eACX;kBACA;IACF;IACA,IAAI;QACF,MAAM,MAAM,CAAC,gBAAgB,CAAC;QAC9B,IAAI,MAAM,MAAM,MAAM,KAAK;YACzB,QAAQ;YAER,kDAAkD;YAClD,SAAS;gBACP,gBAAgB;YAClB;YACA,MAAM,KAAK,SAAS,CAAC;QACvB;QAEA,MAAM,MAAM,IAAI,IAAI;QAEpB,QAAQ,GAAG,CAAC;IACd,EAAE,OAAO,KAAK;QACZ,QAAQ,GAAG,CAAC;IACd;AACF;AAIO,MAAM,4CAAS,OAAO,MAAM,OAAO,UAAU,KAAK,EAAE,GAAK;IAC9D,OAAO,KAAK,IAAI;IAChB,QAAQ,MAAM,IAAI;IAClB,WAAW,SAAS,IAAI;IAExB,MAAM,OAAO;cACX;eACA;kBACA;IACF;IAEA,IAAI;QACF,MAAM,MAAM,CAAC,iBAAiB,CAAC;QAE/B,IAAI,MAAM,MAAM,MAAM,KAAK;YACzB,QAAQ;YACR,SAAS;gBACP,gBAAgB;YAClB;YAEA,MAAM,KAAK,SAAS,CAAC;QACvB;QAEA,MAAM,MAAM,IAAI,IAAI;QAEpB,QAAQ,GAAG,CAAC;IACd,EAAE,OAAO,KAAK;QACZ,6DAA6D;QAC7D,QAAQ,GAAG,CAAC;IACd;AACF,GACA,mBAAmB;;;AFvDnB,kCAAkC;AAClC,IAAI,0CAAqB,SAAS,EAChC,0CAAqB,SAAS,CAAC,gBAAgB,CAAC,UAAU,CAAC,IAAM;IAC/D,EAAE,cAAc;IAChB,IAAI,6CACF,0CACE,0CAAqB,KAAK,CAAC,KAAK,EAChC,0CAAqB,QAAQ,CAAC,KAAK;AAGzC;AAEF,UAAU,GAEV,mCAAmC;AACnC,IAAI,0CAAqB,UAAU,EACjC,0CAAqB,UAAU,CAAC,gBAAgB,CAAC,UAAU,CAAC,IAAM;IAChE,EAAE,cAAc;IAChB,IAAI,6CACF,0CACE,0CAAqB,IAAI,CAAC,KAAK,EAC/B,0CAAqB,KAAK,CAAC,KAAK,EAChC,0CAAqB,QAAQ,CAAC,KAAK;AAGzC;AACD,CACD,UAAU","sources":["public/js/main.js","public/js/view/baseView.js","public/js/controller/authenticate.js"],"sourcesContent":["// import axios from 'axios';\r\n\r\n// Solve the issue of importing, but wanna use fetch here\r\n\r\nimport * as baseView from './view/baseView.js';\r\nimport * as authenticate from './controller/authenticate.js';\r\n\r\n// ## When Login Form is submitted\r\nif (baseView.DOMElements.formLogin) {\r\n  baseView.DOMElements.formLogin.addEventListener('submit', (e) => {\r\n    e.preventDefault();\r\n    if (baseView.validateInputs()) {\r\n      authenticate.login(\r\n        baseView.DOMElements.email.value,\r\n        baseView.DOMElements.password.value\r\n      );\r\n    }\r\n  });\r\n}\r\n/* ###### */\r\n\r\n// ## When SignUp Form is submitted\r\nif (baseView.DOMElements.formSignup) {\r\n  baseView.DOMElements.formSignup.addEventListener('submit', (e) => {\r\n    e.preventDefault();\r\n    if (baseView.validateInputs()) {\r\n      authenticate.signup(\r\n        baseView.DOMElements.name.value,\r\n        baseView.DOMElements.email.value,\r\n        baseView.DOMElements.password.value\r\n      );\r\n    }\r\n  });\r\n}\r\n/* ###### */\r\n","export const DOMElements = {\r\n  formLogin: document.querySelector('.form--login'),\r\n  formSignup: document.querySelector('.form--signup'),\r\n  name: document.querySelector('.name'),\r\n  email: document.querySelector('.email'),\r\n  password: document.querySelector('.password'),\r\n  passwordConfirm: document.querySelector('.password--confirm'),\r\n  inputCommonArr: Array.from(document.querySelectorAll('.form__field__input')),\r\n};\r\n\r\n// Validations\r\nconst formInputErrorNotice = (el = '', msg = '') => {\r\n  // Removing the error of particular input\r\n  if (el && el.parentElement.querySelector('.formInput__error')) {\r\n    el.parentElement\r\n      .querySelector('.formInput__error')\r\n      .parentElement.removeChild(\r\n        el.parentElement.querySelector('.formInput__error')\r\n      );\r\n  }\r\n\r\n  // If the function is not getting the msg, that means the notice should only be removed\r\n  if (msg === '') return;\r\n\r\n  const markUp = `\r\n         <div class = 'para--small color--error formInput__error u-margin-top-extraSmall'>${msg}</div>\r\n    `;\r\n  el.insertAdjacentHTML('afterend', markUp);\r\n};\r\n\r\n// Basic validation of input fields\r\nexport const validateInputs = () => {\r\n  for (let i = 0; i < DOMElements.inputCommonArr.length; i++) {\r\n    if (DOMElements.inputCommonArr[i].value.length < 1) {\r\n      formInputErrorNotice(\r\n        DOMElements.inputCommonArr[i],\r\n        'This field is mondatory'\r\n      );\r\n      return false;\r\n    }\r\n  }\r\n\r\n  if (DOMElements.password) {\r\n    if (DOMElements.password.length < 6) {\r\n      alert('Enter Password of min 6 character!');\r\n      return false;\r\n    }\r\n  }\r\n\r\n  if (DOMElements.passwordConfirm) {\r\n    if (DOMElements.passwordConfirm.length < 6) {\r\n      alert('Enter Password of min 6 character!');\r\n      return false;\r\n    }\r\n  }\r\n\r\n  if (DOMElements.password && DOMElements.passwordConfirm) {\r\n    if (DOMElements.password.value != DOMElements.passwordConfirm.value) {\r\n      alert(`Password and Confirm Password doesn't match`);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  return true;\r\n};\r\n","/*------ WHEN LOGIN ROUTE IS HITTED -----*/\r\nexport const login = async (email, password, st = '') => {\r\n  email = email.trim();\r\n  password = password.trim();\r\n\r\n  const data = {\r\n    email,\r\n    password,\r\n  };\r\n  try {\r\n    const url = `/api/users/login`;\r\n    let res = await fetch(url, {\r\n      method: 'POST',\r\n\r\n      // It tells u about the type of file it is sending\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(data), // body data type must match \"Content-Type\" header\r\n    });\r\n\r\n    res = await res.json();\r\n\r\n    console.log(res);\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n/*  ############## */\r\n\r\n/*------ WHEN SIGNUP ROUTE IS HITTED -----*/\r\nexport const signup = async (name, email, password, st = '') => {\r\n  name = name.trim();\r\n  email = email.trim();\r\n  password = password.trim();\r\n\r\n  const data = {\r\n    name,\r\n    email,\r\n    password,\r\n  };\r\n\r\n  try {\r\n    const url = `/api/users/signup`;\r\n\r\n    let res = await fetch(url, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n\r\n      body: JSON.stringify(data),\r\n    });\r\n\r\n    res = await res.json();\r\n\r\n    console.log(res);\r\n  } catch (err) {\r\n    // utilities.renderAlertSecondary(err.response.data.message);\r\n    console.log(err);\r\n  }\r\n};\r\n/*  ############## */\r\n"],"names":[],"version":3,"file":"bundle.js.map","sourceRoot":"../../"}